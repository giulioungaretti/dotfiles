#-------~---~----------~----------~----
# Misc settings
#-------~---~----------~----------~----
# {{{
set -g prefix C-f
unbind C-b
# fix color weridness.
set-option -gw utf8 on
set-option -gw xterm-keys on
# use send-prefix to pass C-a through to application
bind C-a send-prefix
# shorten command delay super duper short
set -sg escape-time 0
# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"
#  status bar on demand
bind-key  C-f set -g status
#set keybindings to vi style in copy mode
setw -g mode-keys vi
#sane copy keybindings
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
# aggressive resize
setw -g aggressive-resize on

# Look good
set-option -g default-terminal "screen-256color"

# connect to user namespace
# (http://www.economyofeffort.com/2013/07/29/reattach-to-user-namespace-the-fix-for-your-tmux-in-os-x-woes/)
set-option -g default-command "reattach-to-user-namespace -l bash"

# Enable mouse support (works in iTerm)
set-option -g -q mouse on

# make mousewheel work when not in copy mode
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind-key -t vi-copy WheelUpPane halfpage-up
bind-key -t vi-copy WheelDownPane halfpage-down

# use C-b v to paste the tmux buffer
bind v paste-buffer

# clipboard stuff {{{
# ----------------------------------------------------------------------- OSX
# be sure to `brew install reattach-to-user-namespace` to use this
# ^B ^C to set system clipboard to tmux's
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
# TODO shell scrpit if exist then  else
#osx copy paste fix
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#-------------------------------------------------------------------- ubuntu
# copy to system clibpoard
#bind -t vi-copy y copy-pipe "xclip -sel clip -i"
#    }}}
#}}}
#-------~---~----------~----------~----
# WINDOWS & PANES
#-------~---~----------~----------~----
# {{{
# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1
# active pane border color
set -g pane-active-border-fg colour11
# idle pane border color
set -g pane-border-fg colour235
# dakr bg
bind -r c-d set -g pane-border-fg colour235
# light bg
bind -r c-b set -g pane-border-fg colour0
set -g display-panes-colour white
set -g display-panes-time 1100
setw -g monitor-activity on
setw -g utf8 on
# http://visibletrap.blogspot.dk/2014/05/tmux-open-new-panewindow-base-on.html
# open panes in the same directory
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
# and use c-h and c-l to cycle through panes
bind -r c-h previous-window
bind -r c-l next-window
# send input to all panes
bind a set synchronize-panes
# resize panes using standard vim mapping bind < resize-pane -L 10
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10
## split and join panes
#merge
bind-key m command-prompt -p "join pane from:"  "join-pane -s '%%'"
#breakk
bind-key b command-prompt -p "send pane to:"  "join-pane -t '%%'"
# }}}
#-------~---~----------~----------~----
# MISC SETTINGS
#-------~---~----------~----------~----
# {{{
set -g default-shell /bin/zsh
set -g default-command /bin/zsh
set -g set-titles on
set -g set-titles-string 'tmux: #T'
set -g repeat-time 100
setw -g clock-mode-colour colour13
setw -g clock-mode-style 12
setw -g alternate-screen on
# }}}
#-------~---~----------~----------~----
# STATUS & MESSAGE
#-------~---~----------~----------~----
# {{{
#### COLOUR
tm_color_active=colour11
tm_color_inactive=colour11
tm_color_feature=colour4
tm_color_music=colour2
# message text
set-option -g message-bg default
set-option -g message-fg $tm_color_active

#set -g status-justify right
set -g status-bg default
set -g status-fg default
set -g status-interval 5
set -g status-utf8 on

setw -g window-status-fg magenta
setw -g window-status-attr none
setw -g window-status-current-fg white
setw -g window-status-current-bg black
setw -g window-status-current-attr bold
setw -g window-status-activity-attr none


# active window title colors
set-window-option -g window-status-current-fg $tm_color_active
set-window-option -g window-status-current-bg default
set-window-option -g  window-status-current-format "#[bold]#W"

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set -g window-status-format "#I#W"
#status
set -g status-left '#[fg=colour6][#S:#I] '
set -g status-left-length 80
set -g status-right-length 900
set -g status-left-fg black
set -g status-right "#[fg=colour2] #(~/.tmux_status/current_track.sh) #[fg=colour237]#[fg=colour4] âœ‰ #(~/.tmux_status/mailcount_apple_mail.script) #(~/.tmux_status/battery -t)#[fg=colour15,bg=colour0] %H:%M %a-%d-%h "
# }}}
#-------~---~----------~----------~----
# Smart pane switching with awareness of vim splits
#-------~---~----------~----------~----
# {{{
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-H if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-J if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-K if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-L if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# previous pane
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'
# move c-h to c-h
bind -n C-g send-keys 'C-h'
# }}}
#-------~---~----------~----------~----
# misc
#-------~---~----------~----------~----
#{{{
# set insanely long history of panes
set-option -g history-limit 3000
# vim: foldmethod=marker:foldlevel=0
